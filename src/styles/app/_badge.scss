@use 'sass:map';
@use 'sass:color';

@mixin badge-theme($theme) {
  $badges: map.get($theme, badges);

  .badge {
    color: map.get($badges, primary);

    &.disabled {
      color: color.change(map.get($badges, primary), $lightness: 33%, $saturation: 33%);
    }

    &.empty {
      color: transparent;
    }

    &[data-scope="protected"] {
      color: map.get($badges, protected);

      &.disabled {
        color: color.change(map.get($badges, protected), $lightness: 33%, $saturation: 33%);
      }

      &.empty {
        color: transparent;
      }
    }

    &[data-scope="private"] {
      color: map.get($badges, private);

      &.disabled {
        color: color.change(map.get($badges, private), $lightness: 33%, $saturation: 33%);
      }

      &.empty {
        color: transparent;
      }
    }

    &[data-origin="script"] {
      color: map.get($badges, script);
    }
  }

  .skt-circle {
    display: inline-block;
    width: 20px;
    height: 20px;
    margin: 2px;

    border-radius: 50%;
  }

  .skt-rect {
    display: inline-block;
    width: 18px;
    height: 18px;
    margin: 2px;

    border-radius: 2px;
  }

  .skt-scope {
    background-color: map.get($badges, primary);
  }

  .skt-enum {
    background-color: map.get($badges, enum);
  }

  .skt-bitfield {
    background-color: map.get($badges, bitfield);
  }

  .skt-class {
    background-color: map.get($badges, class);
  }

  .skt-struct {
    background-color: map.get($badges, struct);
  }

  .skt-function {
    background-color: map.get($badges, function);
  }
}

@mixin badge-color($theme) {

}
